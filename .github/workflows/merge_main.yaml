name: CD Action

on:
  push:
    branches: ['main']
    paths:
      - '.src/**'
      - 'pkgs/**'
      - '.docker/**'
      - 'main.go'
      - 'config.yaml'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/**'

env:
  REGISTRY: ghcr.io
  VERSION: ${{ github.run_number }}
  OWNER: ${{ github.repository_owner }}
  HELM_VERSION: 0.${{ github.run_number }}.0
  HELM_APP_NAME: helm-${{ vars.APP_NAME }}

jobs:
  Build_Image:
    runs-on: ubuntu-latest
    steps:
      - name: Cloning Repo
        uses: actions/checkout@v4

      - name: Login To GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push
        run: |
          docker build -f .docker/Dockerfile -t ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ vars.APP_NAME }}:${{ env.VERSION }}  .
          docker push ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ vars.APP_NAME }}:${{ env.VERSION }}

  Build_Helm:
    needs: Build_Image
    runs-on: ubuntu-latest
    steps:
      - name: Cloning Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.15.4

      - name: Helm Login In GitHub Container Registry
        run: echo ${{ secrets.GH_TOKEN }} | helm registry login ${{ env.REGISTRY }}/${{ env.OWNER }} --username ${{ env.OWNER }} --password-stdin

      - name: Build Helm Chart
        run: |
          cd .docker
          helm package ${{ env.HELM_APP_NAME}}/ --app-version ${{ env.VERSION }} --version ${{ env.HELM_VERSION }}

      - name: Push Helm In GitHub Container Registry
        run: |
          cd .docker
          helm push ./${{ env.HELM_APP_NAME}}-${{ env.HELM_VERSION }}.tgz oci://${{ env.REGISTRY }}/${{ env.OWNER }}